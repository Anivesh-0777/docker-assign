{"ast":null,"code":"import { createStore } from \"redux\";\nconst INITIAL_STATE = {\n  products: [{\n    \"id\": 1,\n    \"bot\": \"Hot Bot\",\n    \"description\": \"Hot bot is low volatility portfolio of growth stocks selected based on our proprietary metrics\",\n    \"index-value\": 289.34,\n    \"cagr\": 34\n  }, {\n    \"id\": 2,\n    \"bot\": \"Cool Bot\",\n    \"description\": \"Cool bot is low volatility portfolio of growth stocks selected based on our proprietary metrics\",\n    \"index-value\": 439.34,\n    \"cagr\": 28\n  }, {\n    \"id\": 3,\n    \"bot\": \"Options Bot\",\n    \"description\": \"Options bot is low volatility portfolio of growth stocks selected based on our proprietary metrics\",\n    \"index-value\": 139.34,\n    \"cagr\": 42\n  }],\n  cart: 0,\n  currentItem: null\n};\nconst ADD_TO_CART = \"ADD_TO_CART\";\nconst LOAD_CURRENT_ITEM = \"LOAD_CURRENT_ITEM\"; // export const addToCart = (itemID) => {\n//   return {\n//     type: ADD_TO_CART,\n//     payload: {\n//       id: itemID,\n//     },\n//   };\n// };\n// export const loadCurrentItem = (item) => {\n//   return {\n//     type: LOAD_CURRENT_ITEM,\n//     payload: item,\n//   };\n// };\n\nconst shopReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      return { ...state,\n        totalCartValue: state.Cart + 1\n      };\n  }\n}; //         // Great Item data from products array\n//         const item = state.products.find(\n//           (product) => product.id === action.payload.id\n//         );\n//         // Check if Item is in cart already\n//         const inCart = state.cart.find((item) =>\n//           item.id === action.payload.id ? true : false\n//         );\n//         return {\n//           ...state,\n//           cart: inCart\n//             ? state.cart.map((item) =>\n//                 item.id === action.payload.id\n//                   ? { ...item, qty: item.qty + 1 }\n//                   : item\n//               )\n//             : [...state.cart, { ...item, qty: 1 }],\n//         };\n//     }\n// }\n\n\nconst redux = createStore(shopReducer);\nexport default redux;","map":{"version":3,"sources":["/home/anivesh/lastredux/src/index/redux.js"],"names":["createStore","INITIAL_STATE","products","cart","currentItem","ADD_TO_CART","LOAD_CURRENT_ITEM","shopReducer","state","action","type","totalCartValue","Cart","redux"],"mappings":"AACA,SAASA,WAAT,QAA4B,OAA5B;AACA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,QAAQ,EAAE,CACR;AACE,UAAK,CADP;AAEE,WAAM,SAFR;AAGE,mBAAc,gGAHhB;AAIE,mBAAc,MAJhB;AAKE,YAAO;AALT,GADQ,EAQT;AACG,UAAK,CADR;AAEG,WAAM,UAFT;AAGG,mBAAc,iGAHjB;AAIG,mBAAc,MAJjB;AAKG,YAAO;AALV,GARS,EAeT;AACG,UAAK,CADR;AAEG,WAAM,aAFT;AAGG,mBAAc,oGAHjB;AAIG,mBAAc,MAJjB;AAKG,YAAO;AALV,GAfS,CADQ;AAyBlBC,EAAAA,IAAI,EAAE,CAzBY;AA0BlBC,EAAAA,WAAW,EAAE;AA1BK,CAAtB;AAiCA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,iBAAiB,GAAG,mBAA1B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGP,aAAT,EAAwBQ,MAAxB,KAAmC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACI,aAAM,EACJ,GAAGF,KADC;AAEJG,QAAAA,cAAc,EAACH,KAAK,CAACI,IAAN,GAAW;AAFtB,OAAN;AAFN;AAOC,CARL,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,MAAMC,KAAK,GAACb,WAAW,CAACO,WAAD,CAAvB;AACA,eAAeM,KAAf","sourcesContent":["\nimport { createStore } from \"redux\";\nconst INITIAL_STATE = {\n    products: [\n      {\n        \"id\":1,\n        \"bot\":\"Hot Bot\",\n        \"description\":\"Hot bot is low volatility portfolio of growth stocks selected based on our proprietary metrics\",\n        \"index-value\":289.34,\n        \"cagr\":34\n     },\n     {\n        \"id\":2,\n        \"bot\":\"Cool Bot\",\n        \"description\":\"Cool bot is low volatility portfolio of growth stocks selected based on our proprietary metrics\",\n        \"index-value\":439.34,\n        \"cagr\":28\n     },\n     {\n        \"id\":3,\n        \"bot\":\"Options Bot\",\n        \"description\":\"Options bot is low volatility portfolio of growth stocks selected based on our proprietary metrics\",\n        \"index-value\":139.34,\n        \"cagr\":42\n     }\n  \n    ],\n    cart: 0,\n    currentItem: null,\n  };\n\n\n\n\n\nconst ADD_TO_CART = \"ADD_TO_CART\";\nconst LOAD_CURRENT_ITEM = \"LOAD_CURRENT_ITEM\";\n\n// export const addToCart = (itemID) => {\n//   return {\n//     type: ADD_TO_CART,\n//     payload: {\n//       id: itemID,\n//     },\n//   };\n// };\n\n\n\n// export const loadCurrentItem = (item) => {\n//   return {\n//     type: LOAD_CURRENT_ITEM,\n//     payload: item,\n//   };\n// };\n\nconst shopReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n      case \"ADD_TO_CART\":\n          return{\n            ...state,\n            totalCartValue:state.Cart+1\n         }\n        }\n    }\n\n\n//         // Great Item data from products array\n//         const item = state.products.find(\n//           (product) => product.id === action.payload.id\n//         );\n//         // Check if Item is in cart already\n//         const inCart = state.cart.find((item) =>\n//           item.id === action.payload.id ? true : false\n//         );\n  \n//         return {\n//           ...state,\n//           cart: inCart\n//             ? state.cart.map((item) =>\n//                 item.id === action.payload.id\n//                   ? { ...item, qty: item.qty + 1 }\n//                   : item\n//               )\n//             : [...state.cart, { ...item, qty: 1 }],\n//         };\n//     }\n// }\n\n\nconst redux=createStore(shopReducer);\nexport default redux"]},"metadata":{},"sourceType":"module"}